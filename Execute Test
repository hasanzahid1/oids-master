OID App Execute Test

 Prerequisites
Download/clone the oids-master 
Deploying CLI APP
Follow the Instructions provided in oids-master/README.md for building/deploying the application.
After deploying, run the helper script to launch the application.
Open com/bouff/oids/OidAppTester.java doTest() change the ProcessBuilder complete path to oids-master/bin/oid.sh

Run executeTestCase and executePerformanceTest to start Automation Tests
To Execute Test Cases *Run* com/bouff/oids/executeTestCase.java 
To Execute Basic Performance Test *Run* com/bouff/oids/executePerformanceTest.java


Steps used to execute the Automation Test:

Made Use of This ProcessBuilder class, it is used to create operating system processes.
Each ProcessBuilder instance manages a collection of process attributes using which handling input and output streams of a process can be achieved.

Start application with ProcessBuilder.
ProcessBuilder class provides additional control over the nature of the process built to run commands to the Runtime class.
Build Test Set using hashmap with SNMP trap, expected output.
Pass the Test Set using getOutputStream and Read the result using getInputStream .
If the result matches with expected result the test Pass else Fails.

Example Test Cases:

1: OID is EXACT MATCH WITH PREFIX
expectedOutput.put(".1.3.6.1.2.1.10.32.0.1", "true");

Testing value: ".1.3.6.1.2.1.10.32.0.1"
Received from application: ".1.3.6.1.2.1.10.32.0.1: true"
Test passed for: .1.3.6.1.2.1.10.32.0.1

2:  OID is PREFIX + VALID INPUT
expectedOutput.put(".1.3.6.1.2.1.10.32.0.1.0.0.0.0.0", "true");

Testing value: ".1.3.6.1.2.1.10.32.0.1.0.0.0.0.0"
Received from application: ".1.3.6.1.2.1.10.32.0.1.0.0.0.0.0: true"
Test passed for: .1.3.6.1.2.1.10.32.0.1.0.0.0.0.0

Bugs Found During Tests

Defect 1: When space is passed, the expected output should be invalid. But the application throws an exception.

Ex :
Testing value: " .1.3.6.1.6.3.1.1.5"
Received from application: "Exiting. Exception: For input string: " 1""
Test failed for:  .1.3.6.1.6.3.1.1.5
Exception thrown. currectEntry: " .1.3.6.1.6.3.1.1.5"

Defect 2: When Max Java integer value or greater is passed soon after valid SNMP prefix, the application throws an exception.

Ex:
Testing value: ".1.3.6.1.6.3.1.1.5.534532452345"
Received from application: "Exiting. Exception: For input string: "534532452345""
Test failed for: .1.3.6.1.6.3.1.1.5.534532452345
Exception thrown. currectEntry: ".1.3.6.1.6.3.1.1.5.534532452345"

Note: if max integer value is passed after valid prefix + single number it does not throw an exception.
.1.3.6.1.6.3.1.1.5.5.534532452345 this value does not throw an error but .1.3.6.1.6.3.1.1.5.534532452345 throws an exception.

Defect 3: When passing Java escape chars for a valid SNMP it gives Invalid Response. Since this is Java Application, it should be able to take escape chars.


Performance Test:

Executed Total Test Case = 16+ 24 + 13 = 53 ; for 100 times-  Executing 53 * 100 = 5300 tests in 80 secs
Running 5300 extries takes 80 secs, thus performance could be improved.


Test Cases:
1. Tests FOR VALID OIDS : OID is EXACT MATCH WITH PREFIX
2. Tests FOR VALID OIDS : OID is PREFIX + VALID INPUT
3. Tests FOR VALID OIDS : OID is PREFIX + MAX INT VALUE
4. Tests FOR VALID OIDS : OID is PREFIX  + NEXT LINE
5. Tests FOR VALID OIDS : Extra long SNMP 
6. Tests FOR VALID OIDS :+ Escape Sequence CHARS IN JAVA 
7. Tests FOR False OIDS : OID is Partial MATCH
8. Tests FOR False OIDS : EXACT prefix but with 1 change 
9. Tests FOR False OIDS : OID is No MATCH
10. Tests FOR False OIDS : Edge Scenarios
11. Tests FOR False OIDS : Long Format OID using Next Line
12. Invalid TestCase : dot at end.
13. Invalid TestCase : No dot at Start.
14, Invalid TestCase : EXTRA dot at MIDDLE.
15. Invalid Input : Special Char and Alpha
16. Invalid Input : Space at Start, Middle and End
17. Invalid Input : Alphabets used for OIDs








